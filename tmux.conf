# Note on binding:
#   bind is the same as bind-key
#   -r means 'repeatable without repeating the prefix'
#   -n means 'does not need prefix'
#
# setw (and set -w) is short for set-window-option, and is window-specific
# set -g means 'set globally',  set -u un-sets,  set -a appends to a current value (for strings)
# http://superuser.com/questions/238545/binding-a-command-in-tmux-without-using-the-prefix-key
# http://www.openbsd.org/cgi-bin/man.cgi?query=tmux&sektion=1#end
# http://helpful.knobs-dials.com/index.php/Screen_and_tmux
#http://www.openbsd.org/cgi-bin/man.cgi?query=tmux&sektion=1#end
#
# wmii-like http://darkstarshout.blogspot.ca/2012/02/tiling-tmux-keybindings.html

# quick reload of this config into the current tmux (useful while fiddling with it)
bind r source-file ~/.tmux.conf
 
# start numbering at 1, which eases window switch by number (C-a 1, C-a 2)
 set -g base-index 1      
set -g history-limit 10000
set -g status-utf8 on
 
#set -g mouse-select-pane on  # switch to pane via mouse. Usually can't hurt
#set -g mode-mouse on  # adds scrollwheel scrolling (and a few other things)
#                             # ...but messes with middle-button pastes?
 
# set graphical-terminal title
set -g set-titles on
# I like to identify my mess of xterms by the command of the current screen window
# and don't care about window numbers and such, so:
set -g set-titles-string   '#W#F             #T'
 
 
# add or remap horizontal and vertical pane split to  -  and  |  
# (easier to remember) 
# You can leave the old ones, but I like " as window choosing (like screen)
unbind %
bind-key | splitw -h
unbind '"'
#bind-key _ splitw -v
bind-key -n M-Enter splitw -h
bind-key -n M-= splitw -v
 
# window navigation
bind-key -n M-0 if-shell "tmux list-windows|grep ^0" "select-window -t 0" "new-window -t 0"
bind-key -n M-1 if-shell "tmux list-windows|grep ^1" "select-window -t 1" "new-window -t 1"
bind-key -n M-2 if-shell "tmux list-windows|grep ^2" "select-window -t 2" "new-window -t 2"
bind-key -n M-3 if-shell "tmux list-windows|grep ^3" "select-window -t 3" "new-window -t 3"
bind-key -n M-4 if-shell "tmux list-windows|grep ^4" "select-window -t 4" "new-window -t 4"
bind-key -n M-5 if-shell "tmux list-windows|grep ^5" "select-window -t 5" "new-window -t 5"
bind-key -n M-6 if-shell "tmux list-windows|grep ^6" "select-window -t 6" "new-window -t 6"
bind-key -n M-7 if-shell "tmux list-windows|grep ^7" "select-window -t 7" "new-window -t 7"
bind-key -n M-8 if-shell "tmux list-windows|grep ^8" "select-window -t 8" "new-window -t 8"
bind-key -n M-9 if-shell "tmux list-windows|grep ^9" "select-window -t 9" "new-window -t 9"

# Pane navigation (I haven't settled on one yet)

# cycle through panes (ala dwm)
bind-key -n M-j select-pane -t :.+
bind-key -n M-k select-pane -t :.-


# Both navigating and resizing panes is useful. 
# using arrow-key combinations for both is easy for me to remember
# I'll navigate more than resize, so I put the latter under is under Shift-arrows
# kv what is now -n used to be -r!
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
#bind-key -n M-j select-pane -D
#bind-key -n M-k select-pane -U
bind-key -n M-H resize-pane -L 6
bind-key -n M-L resize-pane -R 6
bind-key -n M-J resize-pane -D 6
bind-key -n M-K resize-pane -U 6

# close (kv)
bind-key -n M-Q confirm kill-window
bind-key -n M-q kill-pane
bind-key -n M-1 kill-pane
bind-key -n M-r source-file ~/.tmux.conf

# toggle statusbar (kv)
bind-key -n M-b set-option status

# quick view of processes (kv)
#bind -n '~' split-window "exec htop"
bind -n M-o split-window "exec htop"
bind -n M-c split-window "exec irssi"
bind -n M-a split-window "exec ranger"
bind -n M-v split-window "exec mutt"
bind -n M-w new-window "exec w3m ddg.gg"
bind -n M-p run-shell "exec $(more ~/.cache/dmenu_run|slmenu)"

# window navigation (kv)
#bind-key -n M-1 prev
#bind-key -n M-2 next

# see also repeat-time (we stay in )
 
# how long to show pane numbers (C-a q). 
# Default is too fast to scan the screen.
# I don't use this much.
#set display-panes-time 2000  # (which is 2sec) 
 
# Cycle through windows, or panes.   I prefer using it for panes
#  (The way I use it, C-a C-a is good for most of my window switching needs)
#bind -n f12 select-pane -t :.+
#bind -n f12 next-window
 
 
 
# Set screen-like shortcuts  (also to avoid Ctrl-b for vi users)
#unbind C-b
#set -g prefix C-a
#unbind ^a
#bind-key ^a  last-window            # C-a C-a: quick switch to last-viewed window
#bind-key ^i  select-pane -t :.+     # C-a C-i: cycle between panes in window
#bind-key A   command-prompt "rename-window '%%'"         
#bind-key '"' choose-window     
#bind-key k   confirm-before -p "kill-pane #W? (y/n)" kill-pane
#bind-key K   confirm-before -p "kill-window #W? (y/n)" kill-window  
 
 
 
### Style
#set statusbar
set -g status-bg black
set -g status-fg white
set -g status-left '#[fg=green]#H'
set -g status-right ‘#[fg=yellow]#(uptime | cut -d “,” -f 2-)’


# puts user@hostname on the left of the window list (in a subtler color)
# clearer (color-based) marker of the active window in that list
# clearer current-pane contrast/coloring
#set -g status-bg green
#set -g status-fg black
#set -g status-left-bg green
#set -g status-left-fg white
#set -g status-left-length 30 # allow more length, for longer hostnames
#set -g status-left '#30T  '
#set -g window-status-current-bg black
#set -g window-status-current-fg white
#set -g status-right-fg black
#set -g status-right-bg green
#set -g status-right '%H:%M, %a %h %e '
